
ADDING CGI TO A SERVER:
https://www.tutorialspoint.com/cplusplus/cpp_web_programming.htm

----------------------------------------------------------

How to pass environment variables:
http://www6.uniovi.es/~antonio/ncsa_httpd/cgi/env.html
by setting env variables like in bash? ie: 
[NO THIS IS NOT AT ALL WHAT WE GOTTA DO]

#!/bin/sh

echo Content-type: text/plain
echo

echo CGI/1.0 test script report:
echo

echo argc is $#. argv is "$*".
echo

echo SERVER_SOFTWARE = $SERVER_SOFTWARE
echo SERVER_NAME = $SERVER_NAME
echo GATEWAY_INTERFACE = $GATEWAY_INTERFACE
echo SERVER_PROTOCOL = $SERVER_PROTOCOL
echo SERVER_PORT = $SERVER_PORT
echo REQUEST_METHOD = $REQUEST_METHOD
echo HTTP_ACCEPT = "$HTTP_ACCEPT"
echo PATH_INFO = $PATH_INFO
echo PATH_TRANSLATED = $PATH_TRANSLATED
echo SCRIPT_NAME = $SCRIPT_NAME
echo QUERY_STRING = $QUERY_STRING
echo REMOTE_HOST = $REMOTE_HOST
echo REMOTE_ADDR = $REMOTE_ADDR
echo REMOTE_USER = $REMOTE_USER
echo CONTENT_TYPE = $CONTENT_TYPE
echo CONTENT_LENGTH = $CONTENT_LENGTH

----------------------------------------------------------
Or set them as such
https://stackoverflow.com/questions/28516393/php-cgi-environment-variable-setup/28626656
----------------------------------------------------------

So I guess in the case of an executable (be it .php or other), we need a CGI class instance, 
set up its env hashtable with all the relevant info, then fork and execute it
minishell style. The fact that the program is launched via bash or php-cgi or else 
is determined within the file (eg: #!/usr/bin/php-cgi or #!/usr/bin/bash).

**********************************************************


Concrete test cases:
http://www6.uniovi.es/~antonio/ncsa_httpd/cgi/examples.html

What I could start doing: 
setting up a Cgi class containing a char* const envp[] with all the env we'd need. 
It should also be able to receive any output